version: "3"
services:
  watchtower:
    image: "centurylink/watchtower"
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 300 --cleanup
    networks:
      nwk:
        ipv4_address: 10.5.0.2

  caddy:
    image: "abiosoft/caddy"
    restart: always
    environment:
      CADDYPATH: "/etc/caddycerts"
    volumes:
      - ./caddy/${CADDY_FILE}:/etc/Caddyfile:ro
      - ~/volumes/caddycerts:/etc/caddycerts
    ports:
      - "80:80"
      - "443:443"
    networks:
      nwk:
        ipv4_address: 10.5.0.3

  postgres:
    image: "vadost/postgres"
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data"
    volumes:
      - ~/volumes/postgresql:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      nwk:
        ipv4_address: 10.5.0.4

  awix-biz-production:
    image: "vadost/awix-biz-production"
    restart: always
    depends_on:
      - awix-api-production
    networks:
      nwk:
        ipv4_address: 10.5.0.7

  awix-biz-development:
    image: "vadost/awix-biz-development"
    restart: always
    depends_on:
      - awix-api-development
    networks:
      nwk:
        ipv4_address: 10.5.0.8

  awix-production:
    image: "vadost/awix-production"
    restart: always
    depends_on:
      - awix-api-production
    networks:
      nwk:
        ipv4_address: 10.5.0.9

  awix-development:
    image: "vadost/awix-development"
    restart: always
    depends_on:
      - awix-api-development
    networks:
      nwk:
        ipv4_address: 10.5.0.10

networks:
  nwk:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 10.5.0.0/16
